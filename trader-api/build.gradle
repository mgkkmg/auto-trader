plugins {
    id 'org.asciidoctor.jvm.convert' version '3.3.2'
}

configurations {
    asciidoctorExtensions
}

// 실행가능한 jar로 생성하는 옵션, main이 없는 라이브러리에서는 false로 비활성화함
// 스프링 부트 2.0 이상이라면 bootRepackage.enabled를 사용해야 함
bootJar {
    enabled = true
    archiveFileName = 'auto-trader-app.jar'
    dependsOn asciidoctor
}

// 외부에서 의존하기 위한 jar로 생성하는 옵션, main이 없는 라이브러리에서는 true로 비활성화함
jar { enabled = false }

repositories {
    mavenCentral()
    maven { url 'https://repo.spring.io/milestone' }
    maven { url 'https://repo.spring.io/snapshot' }
}

dependencies {
    implementation project(':trader-core:domain')
    implementation project(':trader-core:infra')
    implementation project(':trader-common')
    implementation project(':global-util')

    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.springframework.boot:spring-boot-starter-actuator'

    implementation platform("org.springframework.ai:spring-ai-bom:1.0.0-SNAPSHOT")
    implementation 'org.springframework.ai:spring-ai-openai-spring-boot-starter'

    // spring ai 버전 변경이 될 경우 의존성 제거하여 jar 실행 테스트 해야함.
    implementation 'io.micrometer:micrometer-tracing-bridge-brave:1.3.4'

    implementation 'org.ta4j:ta4j-core:0.17'

    asciidoctorExtensions 'org.springframework.restdocs:spring-restdocs-asciidoctor'
    testImplementation 'org.springframework.restdocs:spring-restdocs-mockmvc'

    testImplementation 'io.rest-assured:rest-assured'
}

asciidoctor {
    configurations 'asciidoctorExtensions'
    dependsOn test
}

task copyDocument(type: Copy) {
    dependsOn asciidoctor
    from file('build/docs/asciidoc')
    into file('src/main/resources/static/docs')
}

build {
    dependsOn copyDocument
}

/*
[참고]
- root project에서 Gradle 빌드 명령어를 실행한다.
  ex) pwd 입력 시 "$HOME/xxx/yyy/Spring-Boot-2.7.1-Multi-Module-Template"
- Api module을 실행시킬 jar 파일이 생성된 경로로 이동한다.
  ex) cd module-api/build/libs/
- 해당 Path로 이동 후 java -jar 명령어를 실행한다.
  ex) java -jar module-api-0.0.1-SNAPSHOT.jar
[Multi Module에서 Gradle 빌드 명령어 + jar 파일 실행 CLI]
- Gradle 빌드 명령어 :: root project
  // vm 옵션에 jasypt.encryptor.password 값이 설정되어 있을 경우 추가
  -> ./gradlew clean :module-api:buildNeeded -Pjasypt.encryptor.password=123 --stacktrace --info --refresh-dependencies -x test
  // 프로퍼티 파일에 jasypt.encryptor.password 값이 설정되어 있을 경우 제외
  -> ./gradlew clean :module-api:buildNeeded --stacktrace --info --refresh-dependencies -x test
- profile 지정 X
  -> java -jar module-api/build/libs/app.jar
- profile 지정 O
  // vm 옵션에 jasypt.encryptor.password 값이 설정되어 있을 경우 추가
  -> java -jar -Dspring.profiles.active=local -Djasypt.encryptor.password=123 module-api/build/libs/app.jar
  // 프로퍼티 파일에 jasypt.encryptor.password 값이 설정되어 있을 경우 제외
  -> java -jar -Dspring.profiles.active=local module-api/build/libs/app.jar
 */